- if answer.persisted?
  .answer(id="answer-#{answer.id}")
    hr
    p 
      ' Author:
      = answer.user.email
    p = 'The best' if answer.the_best?

    p(class="answer-error-#{answer.id}")  
    p.answer-body = answer.body

    - if current_user&.is_author_of?(question) && !answer.the_best?
      p = link_to 'best', set_the_best_answer_path(answer), method: :patch, remote: true

    - if @answer.files.attached?
      p Files:
      ul
        - @answer.files.each do |file|
          li= link_to file.filename.to_s, url_for(file)
          - if current_user&.is_author_of?(answer) 
            = link_to ' delete file',  attachment_path(file), method: :delete
    .links
      p Links:
      ul
        - answer.links.each do |link|
          li class = "link_#{link.id}"
            p= link_to link.name, link.url
            -if link.gist?
              p= link.gist_content

    .gift_answer_place
      - if answer.gift.present?
        = render answer.gift

    .answer-score  
      = render "votes/score", thing: answer                              

    - if current_user&.is_author_of?(answer)
      p = link_to 'Delete answer', answer, method: :delete, remote: true
      p = link_to 'edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id }

    = form_with model: answer, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
      p
        = f.label :body, 'Answer: '
        = f.text_area :body

      p Files:
      p
        = f.label :files
        = f.file_field :files, multiple:true, direct_upload: true

      #answer_links
        = f.fields_for :links do |l|
          = render 'links/link_fields', f: l     
        .links
          = link_to_add_association 'Add link', f, :links, partial: 'links/link_fields'     

      = f.submit 'save'  